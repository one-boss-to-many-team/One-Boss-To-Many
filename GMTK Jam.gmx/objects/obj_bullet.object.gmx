<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_green_fireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 2
size = 0
FirstParticleSystem = part_system_create();
SecondParticleSystem = part_system_create();
ThirdParticleSystem = part_system_create();
part_system_depth(FirstParticleSystem,depth);

hit = 0

first_particle = part_type_create()
second_particle = part_type_create()
third_particle = part_type_create()
color_1 = make_colour_rgb(112,163,128)
color_2 = 65280
part_type_shape(first_particle,pt_shape_square);
part_type_scale(first_particle,1,1);
part_type_size(first_particle,0.1,0.05,-.004,0);
part_type_color2(first_particle,color_1,color_2);
part_type_alpha2(first_particle,1,0.75);
part_type_speed(first_particle,0.1,0.5,0,0)
part_type_direction(first_particle,0,359,0,0)
part_type_orientation(first_particle,0,359,10,0,true)
part_type_life(first_particle,40,70)
part_type_blend(first_particle,true);

part_type_shape(second_particle,pt_shape_square);
part_type_scale(second_particle,1,1);
part_type_size(second_particle,0.1,0.05,-.004,0);
part_type_color2(second_particle,color_1,color_2);
part_type_alpha2(second_particle,1,0.75);
part_type_speed(second_particle,0.1,0.5,0,0)
part_type_direction(second_particle,0,359,0,0)
part_type_orientation(second_particle,0,359,10,0,true)
part_type_life(second_particle,40,70)
part_type_blend(second_particle,true);

first_emitter = part_emitter_create(FirstParticleSystem);
third_emitter = part_emitter_create(ThirdParticleSystem);
second_emitter = part_emitter_create(SecondParticleSystem);
part_emitter_region(FirstParticleSystem, first_emitter, x-8, x+8, y-8, y+8, ps_shape_ellipse, ps_distr_gaussian);
part_emitter_burst(FirstParticleSystem,first_emitter,first_particle,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 128+random_range(-20,20)
draw_set_blend_mode(bm_subtract);
surface_set_target(global.light);
draw_ellipse_color(x - size / 2 - view_xview,y - size / 2 - view_yview,x+size/2-view_xview,y+size/2-view_yview,color_2,c_black,false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y 
part_system_depth(FirstParticleSystem,depth);
part_system_depth(SecondParticleSystem,depth);
part_system_depth(ThirdParticleSystem,depth);
var boss = instance_place(x,y,obj_boss);
if boss != noone &amp;&amp; hit &lt;= 1 {
                                if boss.change_time &lt;= 0 {
                                part_emitter_region(ThirdParticleSystem, third_emitter, x-10, x+10, y-10, y+10, ps_shape_ellipse, ps_distr_gaussian);                                
                                hit = 60
                                part_type_shape(third_particle,pt_shape_square);
                                part_type_scale(third_particle,1,1);
                                part_type_size(third_particle,0.3,0.01,-0.01,0);
                                part_type_color2(third_particle,make_colour_rgb(112,163,128),65280);
                                part_type_alpha2(third_particle,1,0.50);
                                part_type_speed(third_particle,0.5,0.7,0,0)
                                part_type_direction(third_particle,0,359,0,0) 
                                part_type_orientation(third_particle,0,359,10,true,true)
                                part_type_life(third_particle,50,60)
                                part_type_blend(third_particle,true);                 
                    
                                part_emitter_burst(ThirdParticleSystem,third_emitter,third_particle,16)
                                boss.healt -= 20
                                }
                                
                                }
if hit &gt; 1 {
            hit -= 1
            color_1 = make_colour_rgb(212,227,85)
            color_2 = make_colour_rgb(245,255,10)
            sprite_index = spr_yellow_fireball
            }   
            else
            {
            color_1 = make_colour_rgb(112,163,128)
            color_2 = 65280
            sprite_index = spr_green_fireball
            }                             
if point_distance(x,y,obj_char.x,obj_char.y) &gt;= 320 {hit = 1}

if hit &gt;= 1 {
            var targetDirection = point_direction(x, y, obj_char.x, obj_char.y);
            var angleDifferenc = angle_difference(image_angle,targetDirection);
            var rot_spd = 10;
            direction -= (min(abs(angleDifferenc), rot_spd) * sign(angleDifferenc))
            image_angle = direction
            var p = instance_place(x,y,obj_char);
            if p != noone {
                            p.reload = 0
                            instance_destroy()
                            }
            }          
if hit &gt; 1 {
part_type_shape(second_particle,pt_shape_square);
part_type_scale(second_particle,1,1);
part_type_size(second_particle,0.1,0.05,-.001,0);
part_type_color2(second_particle,make_colour_rgb(212,227,85),make_colour_rgb(245,255,10));
part_type_alpha2(second_particle,1,0.75);
part_type_speed(second_particle,0.1,0.5,0,0)
part_type_direction(second_particle,0,359,0,0)
part_type_orientation(second_particle,0,359,10,0,true)
part_type_life(second_particle,50,100)
part_type_blend(second_particle,true);                                
part_emitter_region(SecondParticleSystem, second_emitter, x-10, x+10, y-10, y+10, ps_shape_ellipse, ps_distr_gaussian);                                
part_type_direction(second_particle,(direction-180)-20,(direction-180)+20,0,0)                            
part_emitter_burst(SecondParticleSystem,second_emitter,second_particle,4)


}    
else
{                             
part_type_shape(first_particle,pt_shape_square);
part_type_scale(first_particle,1,1);
part_type_size(first_particle,0.1,0.05,-.001,0);
part_type_color2(first_particle,make_colour_rgb(112,163,128),65280);
part_type_alpha2(first_particle,1,0.75);
part_type_speed(first_particle,0.1,0.5,0,0)
part_type_direction(first_particle,0,359,0,0)
part_type_orientation(first_particle,0,359,10,0,true)
part_type_life(first_particle,50,100)
part_type_blend(first_particle,true);                                
part_emitter_region(FirstParticleSystem, first_emitter, x-10, x+10, y-10, y+10, ps_shape_ellipse, ps_distr_gaussian);                                
part_type_direction(first_particle,(direction-180)-20,(direction-180)+20,0,0)                            
part_emitter_burst(FirstParticleSystem,first_emitter,first_particle,4)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(FirstParticleSystem);
part_system_destroy(SecondParticleSystem);
part_system_destroy(ThirdParticleSystem);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
