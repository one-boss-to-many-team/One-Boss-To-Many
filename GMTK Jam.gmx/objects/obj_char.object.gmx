<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main_char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = 5
real_spd = 2
img_xscale = 1
recoil = 30
recoil_max = 30

dash_cd = 0
dash_alpha = 0.1
                
FourthParticleSystem = part_system_create();
part_system_depth(FourthParticleSystem,depth)
fourth_particle = part_type_create();
part_type_sprite(fourth_particle,sprite_index,image_index,0,0);
part_type_scale(fourth_particle,1,1);
part_type_size(fourth_particle,1,1,0,0);
part_type_alpha2(fourth_particle,dash_alpha,0)
part_type_life(fourth_particle,10,15)


fourth_emitter = part_emitter_create(FourthParticleSystem);

reload = 0
reload_max = 30

gun_type = 1

img_spd = 1/6
image_speed = img_spd
// 1 = GUN
gun_type_recoil[1] = 2
gun_type_reload[1] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 128
draw_set_blend_mode(bm_subtract);
surface_set_target(global.light);
draw_ellipse_color(x - size / 2 - view_xview,(y-16) - size / 2 - view_yview,x+size/2-view_xview,(y-16)+size/2-view_yview,c_white,c_black,false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var forward = keyboard_check(ord("W"));
var shot = mouse_check_button(mb_left);
var dash = keyboard_check(vk_space);

depth = -y
if shot &amp;&amp; reload == 0 {
                        b = instance_create(x,y-16,obj_bullet)
                        b.direction = point_direction(x,y,mouse_x,mouse_y)
                        b.speed = 10
                        b.image_angle = b.direction
                        reload = 1
                        }
if dash_cd &gt; 0 {
                dash_cd -= 1
                dash_alpha = 0.1
                }
if keyboard_check(ord("A")) or keyboard_check(ord("S")) or keyboard_check(ord("D")) or keyboard_check(ord("W")){image_speed = img_spd} else {image_speed = 0 image_index = 0}


 
            if ( keyboard_check(ord("A")) &amp;&amp; keyboard_check(ord("W"))) or ( keyboard_check(ord("A")) &amp;&amp; keyboard_check(ord("S"))) or ( keyboard_check(ord("D")) &amp;&amp; keyboard_check(ord("W"))) or ( keyboard_check(ord("D")) &amp;&amp; keyboard_check(ord("S"))) {real_spd = sqrt((spd*spd)/2)} else {real_spd = spd}
            
            if !dash or dash_cd != 0 {
                        if keyboard_check(ord("A")) {
            
                                                if place_free(x-real_spd,y) 
                                                                    {
                                                                    
                                                                    x -= real_spd
                                                                    image_xscale = -img_xscale 
                                                                    
                                                                    }
            
                                        }
                        if keyboard_check(ord("D")) {
                                        
                                                 if place_free(x+real_spd,y) 
                                                                    {
                                                                    
                                                                    x += real_spd
                                                                    image_xscale = img_xscale 
                                                                    
                                                                    }
                                                   
                                        }
                                        
                        if keyboard_check(ord("W")) {
            
                                                if place_free(x,y-real_spd) 
                                                                    {
                                                                    y -= real_spd
                                                                    }
                                               
                                        }
                        if keyboard_check(ord("S")){
                                       
                                                 if place_free(x,y+real_spd) 
                                                                    {
                                                                    y += real_spd
                                                                    }
                                                
                                         
                                        }   
                          }
                          else if dash &amp;&amp; dash_cd == 0
                          {
                          repeat(16){
                                  if keyboard_check(ord("A")) {
            
                                                if place_free(x-real_spd,y) 
                                                                    {
                                                                    
                                                                    x -= real_spd
                                                                    image_xscale = -img_xscale 
                                                                    
                                                                    }
            
                                        }
                        if keyboard_check(ord("D")) {
                                        
                                                 if place_free(x+real_spd,y) 
                                                                    {
                                                                    
                                                                    x += real_spd
                                                                    image_xscale = img_xscale 
                                                                    
                                                                    }
                                                   
                                        }
                                        
                        if keyboard_check(ord("W")) {
            
                                                if place_free(x,y-real_spd) 
                                                                    {
                                                                    y -= real_spd
                                                                    }
                                               
                                        }
                        if keyboard_check(ord("S")){
                                       
                                                 if place_free(x,y+real_spd) 
                                                                    {
                                                                    y += real_spd
                                                                    }
                                                
                                         
                                        }  
                                    part_system_depth(FourthParticleSystem,depth)
                                    part_type_alpha2(fourth_particle,dash_alpha,0)
                                    dash_alpha += 0.05
                                    part_particles_create(FourthParticleSystem, x, y, fourth_particle, 1);
                                    dash_cd = 90
                                    
                         } }                                  
            
            
            

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,obj_boss) or place_meeting(x,y,obj_meteor) or place_meeting(x,y,obj_laser) or place_meeting(x,y,obj_thunder) or place_meeting(x,y,obj_fire) {
//obj_room_control.rooom = room3 
room = room3
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(FourthParticleSystem);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if reload == 0 {
                draw_sprite_ext(spr_lanter_on,image_index,x,y,image_xscale,image_yscale,0,c_white,1)
                }
                else
                {
                draw_sprite_ext(spr_lanter_off,image_index,x,y,image_xscale,image_yscale,0,c_white,1)
                }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="57">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
